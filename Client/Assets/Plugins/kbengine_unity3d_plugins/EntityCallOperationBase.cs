/*
	Generated by KBEngine!
	Please do not modify this file!
	
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;

	// defined in */scripts/entity_defs/Operation.def
	public class EntityBaseEntityCall_OperationBase : EntityCall
	{
		public UInt16 entityComponentPropertyID = 0;

		public EntityBaseEntityCall_OperationBase(UInt16 ecpID, Int32 eid) : base(eid, "Operation")
		{
			entityComponentPropertyID = ecpID;
			type = ENTITYCALL_TYPE.ENTITYCALL_TYPE_BASE;
		}

		public void reqCreateSpace()
		{
			Bundle pBundle = newCall("reqCreateSpace", entityComponentPropertyID);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqLoginSpace(UInt64 arg1)
		{
			Bundle pBundle = newCall("reqLoginSpace", entityComponentPropertyID);
			if(pBundle == null)
				return;

			bundle.writeUint64(arg1);
			sendCall(null);
		}

		public void reqRemoveSpace(UInt64 arg1)
		{
			Bundle pBundle = newCall("reqRemoveSpace", entityComponentPropertyID);
			if(pBundle == null)
				return;

			bundle.writeUint64(arg1);
			sendCall(null);
		}

		public void reqSpaceList()
		{
			Bundle pBundle = newCall("reqSpaceList", entityComponentPropertyID);
			if(pBundle == null)
				return;

			sendCall(null);
		}

	}

	public class EntityCellEntityCall_OperationBase : EntityCall
	{
		public UInt16 entityComponentPropertyID = 0;

		public EntityCellEntityCall_OperationBase(UInt16 ecpID, Int32 eid) : base(eid, "Operation")
		{
			entityComponentPropertyID = ecpID;
			className = "Operation";
			type = ENTITYCALL_TYPE.ENTITYCALL_TYPE_CELL;
		}

		public void reqGamePause()
		{
			Bundle pBundle = newCall("reqGamePause", entityComponentPropertyID);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqGameRunning()
		{
			Bundle pBundle = newCall("reqGameRunning", entityComponentPropertyID);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqLoginOutSpace()
		{
			Bundle pBundle = newCall("reqLoginOutSpace", entityComponentPropertyID);
			if(pBundle == null)
				return;

			sendCall(null);
		}

		public void reqReady(SByte arg1)
		{
			Bundle pBundle = newCall("reqReady", entityComponentPropertyID);
			if(pBundle == null)
				return;

			bundle.writeInt8(arg1);
			sendCall(null);
		}

	}
	}
