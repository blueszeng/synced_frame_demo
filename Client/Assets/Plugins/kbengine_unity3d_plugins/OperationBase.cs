/*
	Generated by KBEngine!
	Please do not modify this file!
	Please inherit this module, such as: (class Operation : OperationBase)
	tools = kbcmd
*/

namespace KBEngine
{
	using UnityEngine;
	using System;
	using System.Collections;
	using System.Collections.Generic;

	// defined in */scripts/entity_defs/Operation.def
	public abstract class OperationBase : EntityComponent
	{
		public EntityBaseEntityCall_OperationBase baseEntityCall = null;
		public EntityCellEntityCall_OperationBase cellEntityCall = null;

		public SByte isWathcher = 0;
		public virtual void onIsWathcherChanged(SByte oldValue) {}
		public Int32 lossScore = 0;
		public virtual void onLossScoreChanged(Int32 oldValue) {}
		public SByte state = 0;
		public virtual void onStateChanged(SByte oldValue) {}
		public Int32 winScore = 0;
		public virtual void onWinScoreChanged(Int32 oldValue) {}

		public abstract void onCreateSpaceResult(UInt64 arg1); 
		public abstract void onLoginOutSpaceResult(Int32 arg1, UInt64 arg2); 
		public abstract void onLoginSpaceResult(UInt64 arg1); 
		public abstract void onReqSpaceList(SPACE_LIST arg1); 

		public override void createFromStream(MemoryStream stream)
		{
			base.createFromStream(stream);
			baseEntityCall = new EntityBaseEntityCall_OperationBase(entityComponentPropertyID, ownerID);
			cellEntityCall = new EntityCellEntityCall_OperationBase(entityComponentPropertyID, ownerID);
		}

		public override void onRemoteMethodCall(UInt16 methodUtype, MemoryStream stream)
		{
			ScriptModule sm = EntityDef.moduledefs["Operation"];

			Method method = sm.idmethods[methodUtype];
			switch(method.methodUtype)
			{
				case 16:
					UInt64 onCreateSpaceResult_arg1 = stream.readUint64();
					onCreateSpaceResult(onCreateSpaceResult_arg1);
					break;
				case 18:
					Int32 onLoginOutSpaceResult_arg1 = stream.readInt32();
					UInt64 onLoginOutSpaceResult_arg2 = stream.readUint64();
					onLoginOutSpaceResult(onLoginOutSpaceResult_arg1, onLoginOutSpaceResult_arg2);
					break;
				case 17:
					UInt64 onLoginSpaceResult_arg1 = stream.readUint64();
					onLoginSpaceResult(onLoginSpaceResult_arg1);
					break;
				case 15:
					SPACE_LIST onReqSpaceList_arg1 = ((DATATYPE_SPACE_LIST)method.args[0]).createFromStreamEx(stream);
					onReqSpaceList(onReqSpaceList_arg1);
					break;
				default:
					break;
			};
		}

		public override void onUpdatePropertys(UInt16 propUtype, MemoryStream stream, int maxCount)
		{
			ScriptModule sm = EntityDef.moduledefs["Operation"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

			while(stream.length() > 0 && maxCount-- != 0)
			{
				UInt16 _t_utype = 0;
				UInt16 _t_child_utype = propUtype;

				if(_t_child_utype == 0)
				{
					if(sm.usePropertyDescrAlias)
					{
						_t_utype = stream.readUint8();
						_t_child_utype = stream.readUint8();
					}
					else
					{
						_t_utype = stream.readUint16();
						_t_child_utype = stream.readUint16();
					}
				}

				Property prop = null;

				prop = pdatas[_t_child_utype];

				switch(prop.properUtype)
				{
					case 10:
						SByte oldval_isWathcher = isWathcher;
						isWathcher = stream.readInt8();

						if(prop.isBase())
						{
							if(owner.inited)
								onIsWathcherChanged(oldval_isWathcher);
						}
						else
						{
							if(owner.inWorld)
								onIsWathcherChanged(oldval_isWathcher);
						}

						break;
					case 9:
						Int32 oldval_lossScore = lossScore;
						lossScore = stream.readInt32();

						if(prop.isBase())
						{
							if(owner.inited)
								onLossScoreChanged(oldval_lossScore);
						}
						else
						{
							if(owner.inWorld)
								onLossScoreChanged(oldval_lossScore);
						}

						break;
					case 7:
						SByte oldval_state = state;
						state = stream.readInt8();

						if(prop.isBase())
						{
							if(owner.inited)
								onStateChanged(oldval_state);
						}
						else
						{
							if(owner.inWorld)
								onStateChanged(oldval_state);
						}

						break;
					case 8:
						Int32 oldval_winScore = winScore;
						winScore = stream.readInt32();

						if(prop.isBase())
						{
							if(owner.inited)
								onWinScoreChanged(oldval_winScore);
						}
						else
						{
							if(owner.inWorld)
								onWinScoreChanged(oldval_winScore);
						}

						break;
					default:
						break;
				};
			}
		}

		public override void callPropertysSetMethods()
		{
			ScriptModule sm = EntityDef.moduledefs["Operation"];
			Dictionary<UInt16, Property> pdatas = sm.idpropertys;

			SByte oldval_isWathcher = isWathcher;
			Property prop_isWathcher = pdatas[4];
			if(prop_isWathcher.isBase())
			{
				if(owner.inited && !owner.inWorld)
					onIsWathcherChanged(oldval_isWathcher);
			}
			else
			{
				if(owner.inWorld)
				{
					if(prop_isWathcher.isOwnerOnly() && !owner.isPlayer())
					{
					}
					else
					{
						onIsWathcherChanged(oldval_isWathcher);
					}
				}
			}

			Int32 oldval_lossScore = lossScore;
			Property prop_lossScore = pdatas[5];
			if(prop_lossScore.isBase())
			{
				if(owner.inited && !owner.inWorld)
					onLossScoreChanged(oldval_lossScore);
			}
			else
			{
				if(owner.inWorld)
				{
					if(prop_lossScore.isOwnerOnly() && !owner.isPlayer())
					{
					}
					else
					{
						onLossScoreChanged(oldval_lossScore);
					}
				}
			}

			SByte oldval_state = state;
			Property prop_state = pdatas[6];
			if(prop_state.isBase())
			{
				if(owner.inited && !owner.inWorld)
					onStateChanged(oldval_state);
			}
			else
			{
				if(owner.inWorld)
				{
					if(prop_state.isOwnerOnly() && !owner.isPlayer())
					{
					}
					else
					{
						onStateChanged(oldval_state);
					}
				}
			}

			Int32 oldval_winScore = winScore;
			Property prop_winScore = pdatas[7];
			if(prop_winScore.isBase())
			{
				if(owner.inited && !owner.inWorld)
					onWinScoreChanged(oldval_winScore);
			}
			else
			{
				if(owner.inWorld)
				{
					if(prop_winScore.isOwnerOnly() && !owner.isPlayer())
					{
					}
					else
					{
						onWinScoreChanged(oldval_winScore);
					}
				}
			}

		}
	}
}